[{"categories":["Tech"],"content":"产品简介 SweetPlus是一款基于烘焙蛋糕类食品的菜谱查找的微信小程序。旨在让喜爱做烘焙的用户可以快速查找到想要的菜谱，同时我还增加了节日的分类目录，让烘焙也变成一种有仪式感的事情。因为做烘焙的过程是甜甜的，做出的成品是甜甜的，那么查找做法的过程必然是更加甜的，所以我将这款小程序命名为SweetPlus。甜一点，再甜一点，更甜一点！ 目标用户 任何可能想要做烘焙或者其他菜的人 主要功能 查询任何想要的做的甜品或者菜肴，以及在对应节日中通过节日分类查询到相应的食物的做法。对自己喜爱的菜谱进行收藏以及对现有的菜品的做法进行改进并上传发布给开发者。 开发过程 这款微信小程序是用云开发实现的，使用云开发数据库调用聚合数据中的菜谱大全的api对数据进行调用，通过wxss的样式改变将菜谱展示出来。 增加收藏按钮，点击按钮，自动将当前事物的id存入collectlist收藏列表中，通过对数据库food集合的查询从而将已经收藏过的食物做法展现在页面上。 增加改良按钮，点击按钮，跳转到发表页面，发表文字和图片，成功存入云开发数据库中。 以下是部分调用数据库的代码截图 开发成果 开发心得 一定要养成良好的代码备份的习惯，充分利用git,不然泪水是流也流不完的。做不论是微信小程序还是其他项目的开发，一定要确定好需求，所有界面的逻辑，界面UI设计等等基本设定好之后动手去写代码，不然写的过程真的挺迷茫的，效率又不高。开发过程中出现了挺多语法和逻辑错误，最好的解决办法就是啃官方文档，一遍一遍的仔细读微信小程序官方文档api调用的例子，问题总会迎刃而解的。 ","date":"2019-06-07","objectID":"/sweetplus/:0:0","tags":["微信小程序","开发总结"],"title":"微信小程序开发总结","uri":"/sweetplus/"},{"categories":["Tech"],"content":"SQL server 2017 安装过程问题总结 ","date":"2019-04-16","objectID":"/test1/:0:0","tags":["SQL","stallment"],"title":"SQL安装总结","uri":"/test1/"},{"categories":["Tech"],"content":"首先推荐一个非常好用的公众号——软件安装管家。 大部分我们常用的软件破解版都可以在这里找到。当然我安装SQL server 2017 安装包以及教程都是在这个公众号找到的。在此附上连接 ","date":"2019-04-16","objectID":"/test1/:1:0","tags":["SQL","stallment"],"title":"SQL安装总结","uri":"/test1/"},{"categories":["Tech"],"content":"之后按照安装教程一步一步进行，有几个重要的步骤需要注意。 在你想要安装的盘中新建文件夹jre 1.8，可将软件更改安装位置，这个对于之前安装位置错误还是有很大的帮助的。 修改path环境变量时，发现我的电脑中弹出的并非一条属性值，而是多条，这样就不知道该如何修改了。 解决办法：可将教程中需要修改的直接添加，然后将刚添加的属性值直接移到开头，便可以解决问题啦。（JDK的安装应该在之前学JAVA的时候就已经安装好了，后来出现问题，在命令行窗口中 执行 “java”命令即可验证。） 安装SQL server ,在进行这一步时不能安装教程来勾选全选，这样后面的步骤中会出现错误提示: R服务相关未完成之类的。 解决办法： 带有‘R’的选项全部不选。 接下来按照教程一步步进行就没问题啦。但是SQL server 安装成功之后，并不是我们课上使用的工具。我们需要的是SQL的manage 工具。所以打开一开始的安装中心界面点击第二条安装即可。 ","date":"2019-04-16","objectID":"/test1/:2:0","tags":["SQL","stallment"],"title":"SQL安装总结","uri":"/test1/"},{"categories":["Tech"],"content":"其实有了上面的安装包和安装教程就已经成功了90%，只需要注意我上面提到的几点再结合教程认真一步一步来，安装还是很容易的. ","date":"2019-04-16","objectID":"/test1/:3:0","tags":["SQL","stallment"],"title":"SQL安装总结","uri":"/test1/"},{"categories":["Tech"],"content":"微信小程序-开发第四周 ","date":"2019-04-07","objectID":"/wx-week4/:1:0","tags":["周报","微信小程序"],"title":"微信小程序 开发第四周","uri":"/wx-week4/"},{"categories":["Tech"],"content":"用mockdata 伪造小程序后台数据 对于一个小程序小白来说，还要搭后台才能利用数据看出测试效果简直是太麻烦了，而且调用理想网站的API还经常会报错误，所以这时候建立一个伪后台就显得尤为舒服。 在小程序文件夹页面添加文件夹 data(名字当然是随便取啦） 在文件夹里新建js文件添加你想要测试的数据， 例如我想要做一个轮播图： var localdata = { \"bannerPic\":[{ pid:6, imgUrls: '/image/b3.jpg' },{ pid: 7, imgUrls: '/image/b2.jpg', },{ pid: 8, imgUrls: '/image/b1.jpg', }], 这是我们的数据文件，pid是对应的标号，方便后面调用。 然后在需要使用数据的对应页面文件夹下的js文件开头添加 var mockData= require('../../data/homedata.js'); 就可以用我们刚刚添加的数据啦 当然wxml文件也需要写出调用： \u003cswiper indicator-dots=\"true\" autoplay=\"true\" interval=\"{{interval}}\" duration=\"{{duration}}\" circular=\"true\"\u003e \u003cblock wx:for=\"{{productlists.bannerPic}}\" wx:key=\"{{index}}\"\u003e \u003cnavigator url=\"details/details?pid={{item.pid}}\"\u003e \u003cswiper-item \u003e \u003cimage src=\"{{item.imgUrls}}\" class=\"slide-image\" width=\"100%\" /\u003e \u003c/swiper-item\u003e \u003c/navigator\u003e \u003c/block\u003e \u003c/swiper\u003e 比如在实现点击跳转时，pid就可以派上用场啦。 这就是最后实现的效果啦，没办法上传动态图，不过轮播的效果还是想象的到的吧嘻嘻。 这个方法一般只适合于比较少的数据量，如果需要大量数据的伪数据后台可以使用类似EasyMock的在线工具。点我去EasyMock网站看看 关于教程应该到处都有的，我这里就不贴了。类似这样的工具应该还有蛮多，大家可以自己去发现噢！ 这周就是这样啦，我们下周再见!下周的任务要做基类继承等等的任务了。 ","date":"2019-04-07","objectID":"/wx-week4/:2:0","tags":["周报","微信小程序"],"title":"微信小程序 开发第四周","uri":"/wx-week4/"},{"categories":["Tech"],"content":"微信小程序—尝试开发第二周 ","date":"2019-03-25","objectID":"/wx-week2/:0:0","tags":["微信小程序","周报"],"title":"微信小程序第二周周报","uri":"/wx-week2/"},{"categories":["Tech"],"content":"上周实现了一些基本的图片处理,这周继续页面进行改进。同时，和老师讨论之后，决定新增加社交功能以及自己搭配配方等功能。 微信小程序轮播图的实现 如果对之前js的轮播图掌握较好的话，那么对照小程序官方文档应该是容易掌握的。下面直接贴代码了。 index. js: data: { indicatorDots: false, autoplay: false, //是否自动切换 interval: 3000, //自动切换时间间隔 duration: 800, //滑动动画时常 }, index. wxml \u003cswiper indicator-dots=\"true\" autoplay=\"true\" interval=\"{{interval}}\" duration=\"{{duration}}\" circular=\"true\"\u003e \u003cblock wx:for=\"{{productlists.bannerPic}}\" wx:key=\"{{index}}\"\u003e \u003cnavigator url=\"details/details?pid={{item.pid}}\"\u003e \u003cswiper-item \u003e \u003cimage src=\"{{item.imgUrls}}\" class=\"slide-image\" width=\"100%\" /\u003e \u003c/swiper-item\u003e \u003c/navigator\u003e \u003c/block\u003e \u003c/swiper\u003e 然后在.wxss文件里设置需要的高度和宽度即可。 json文件中 一些小细节 开发过程中\"navigationBarTextStyle”: 后面填写颜色的十六进制码会报错 ，提示应该为“black”或“white”。 查阅文档发现，仅支持白和黑，我又一次弱智了?。 分类界面设计 js文件 Page({ data: { category: [ {name:'面包',id:'guowei'}, {name:'饼干',id:'shucai'}, {name:'蛋糕',id:'chaohuo'}, {name:'冰淇淋',id:'dianxin'}, {name:'饮料',id:'cucha'}, {name:'原料管理',id:'danfan'}, //各类的名字以及id ，id方便后面使用。 ], detail:[], curIndex: 0, isScroll: true, toView: 'guowei' //第一个界面的类目 }, onReady(){ this.setData({ detail: mockData.catelists }) }, switchTab(e){ const self = this; this.setData({ isScroll: true //局部滚动，tab栏切换 }) setTimeout(function(){ //定时器 self.setData({ toView: e.target.dataset.id, curIndex: e.target.dataset.index }) },0) setTimeout(function () { self.setData({ isScroll: false }) },1) } }) 之后在wxss设置自己想要的样式就可以啦！ ","date":"2019-03-25","objectID":"/wx-week2/:1:0","tags":["微信小程序","周报"],"title":"微信小程序第二周周报","uri":"/wx-week2/"},{"categories":["Tech"],"content":"下周开发计划 打算把 社交以及配料表和更改配方界面写完，云开发暂未提上日程。 ","date":"2019-03-25","objectID":"/wx-week2/:2:0","tags":["微信小程序","周报"],"title":"微信小程序第二周周报","uri":"/wx-week2/"},{"categories":["Tech"],"content":"微信小程序-尝试开发第一周 ","date":"2019-03-17","objectID":"/wx-week1/:0:0","tags":["周报","微信小程序"],"title":"微信小程序第一周周报","uri":"/wx-week1/"},{"categories":["Tech"],"content":"刚开始开发小程序流的泪和犯的蠢 使用tabBar建立底部导航栏时图标上传失败 导入图标的时候，一直出现…jpg文件不存在，上传失败等这样的错误(忘了截图求放过），后来仔细检查，以及阅读小程序文档发现图标大小超过40KB,无法上传，于是修改了图标大小，完美解决。小程序文档还是要仔细读一读的！ 逗号 以及是否支持注释 在写.json的配置文件以及.js文件中data的配置时，要注意最后一个括号中的语句是不加逗号的。（虽然很低级的错误，但我经常犯，也真的很无奈了)还有一点就是json文件是不支持加注释的。 在页面中添加背景图片 ***前来更新 ，屡次尝试之后发现官方给的云开发的例子中的添加图片方式并不能在手机端显示（应该我尝试过程中出现了问题，但一直没有解决），所以去找文档，发现图片处理应该直接用\u003cimage\u003e来写，而且url图片路径中不能出现中文，使用本地图片的src应该使用绝对路径。 一把辛酸泪，好好读文档才是最重要的 我其实在这个方面浪费了挺长时间的，一开始在wxss文件中添加image属性，无果，后来在wxml文件的模块中尝试直接添加style=\"background-image= …..\",问题还是没有解决。。然后百度一下，发现答案不外乎下面这几种： 但这些方法要么麻烦（比如那个base64)要么没用（比如我之前试过的），所以我还是决定去瞧瞧官方给的例子，果不其然！ 好吧，完美解决。之前尝试失败的原因居然是 url。还有一个要注意的是，语句 background-size: cover 功能是背景图片自动缩小比例适配模块，妈妈再也不用担心我得手动调整图片比例了：） 出现错误json文件找不到 错误显示未找到文件，但我清楚地看到文件在那里，里面内容也没报错啊。百度无果。最后惊醒自己刚刚好像改了整个文件所在文件夹的名字…改回名字，问题解决。这一天天的都是些什么错误呀。 小程序text文本换行 \\n text文本居中 使用flex 关键性语句justify-content：center; display: flex; align-items: center; justify-content：center; ","date":"2019-03-17","objectID":"/wx-week1/:1:0","tags":["周报","微信小程序"],"title":"微信小程序第一周周报","uri":"/wx-week1/"},{"categories":["Tech"],"content":"尝试的第一周的学习成果 模型图、第一个界面的完成以及小程序的基本架构 在这里插入图片描述","date":"2019-03-17","objectID":"/wx-week1/:2:0","tags":["周报","微信小程序"],"title":"微信小程序第一周周报","uri":"/wx-week1/"},{"categories":["Tech"],"content":"下周学习计划 这周主要用来做小程序模型图和首页前端，对于真正的开发还没有开始吧。 下周会在界面写完学有余力的情况下学习云函数、云开发。 ","date":"2019-03-17","objectID":"/wx-week1/:3:0","tags":["周报","微信小程序"],"title":"微信小程序第一周周报","uri":"/wx-week1/"},{"categories":["Tech"],"content":"初学git之路问题总结 当我下定不学会不罢休的决心学习git的时候出现了一个又一个的错误 下面是我亲手解决之后的总结 我究竟遇到了那些错误? 对git常用语法不熟悉导致的低级错误 对于几乎不使用命令行的我来说简直是死亡一般的灾难 之后花了点时间大致读了一下git–help，才避免了这些低级错误 出现错误提示 error: src refspec master does not match any. error: failed to push some refs to 常见原因： 1.本地git仓库目录下为空 2.本地仓库add后未commit 3.git init错误 4.在GitHub上面添加了README.MD文件之后，需要重新进行更新 解决办法： 1.控制面板打开文件夹选项 打开隐藏文件和文件夹显示 2.到本地仓库目录下查看是否有.git文件夹——无 则git init 3.看.git文件夹下是否有之前提交的文件——若无 则重新 git commit (如果之前git add过的话 没有就要重新 add commit) 4.在git-push 之前添加 git-pull 操作之后，重新进行push操作 git commit 时，出现错误 error: Error building trees 解决办法： 执行命令 git reset –mixed （查资料得出的解决办法，原因不是很明白，但确实能解决问题） 出现错误 error: nothing added to commit but untracked files present. 原因： git没有把提交的文件加载进来，但是把需要提交的文件都列出来了 解决办法： 用git add XXX(文件名) 把需要提交的文件加上 ，然后git commit -m “xx”, 再git push -u origin master重新提交就可以了 ","date":"2019-01-02","objectID":"/git-solve/:0:0","tags":["git","问题汇总"],"title":"初学git的踩坑之路","uri":"/git-solve/"},{"categories":["Tech"],"content":"注意 上面列举为出现次数最为频繁的问题，一些自己很快能够解决的就没贴出来。 （当然绝对不是因为我懒） ","date":"2019-01-02","objectID":"/git-solve/:1:0","tags":["git","问题汇总"],"title":"初学git的踩坑之路","uri":"/git-solve/"},{"categories":["Tech"],"content":"欢迎指正呀 ","date":"2019-01-02","objectID":"/git-solve/:2:0","tags":["git","问题汇总"],"title":"初学git的踩坑之路","uri":"/git-solve/"},{"categories":["Tech"],"content":"微信小程序开发第三周 上周结合老师提出的意见对页面进行了整改，经过这一周的努力还是没有想到原料管理和焙圈（没错，我只是给它取了个名字而已）该具体怎么搞，于是我把原有不变的功能的页面改进了一下，对于一个具体烘焙作品的细节页面做了一些调整。 css中的animation属性 animation是CSS3中新增的属性，它可以制作出多种酷炫的动画效果，和flash也有一定的联系。 比如 我尝试做的是点击商品名称旁边的收藏按钮，小心心图标会向右上角的?缓慢移动。 代码如下： 当然animation也有其他的属性 动画名称 /*1.name：动画名称*/ /*-webkit-animation-name: kf_play;*/ /*-moz-animation-name: kf_play;*/ /*-o-animation-name: kf_play;*/ /*animation-name: kf_play;*/ 动画的持续时间，即播放一次动画所需的时间 /*2.duration：动画持续时间*/ /*-webkit-animation-duration: 2s;*/ /*-moz-animation-duration: 2s;*/ /*-o-animation-duration: 2s;*/ /*animation-duration: 2s;*/ 动画播放速率曲线，这个属性与transition的一样。 /*3.animation-timing-function：动画播放速率曲线*/ /*-webkit-animation-timing-function: linear;*/ /*-moz-animation-timing-function: linear;*/ /*-o-animation-timing-function: linear;*/ /*animation-timing-function: linear;*/ /*其他可选值：ease | linear | ease-in | ease-out | ease-in-out*/ 这里解释一下ease ease-in等的表示含义 这些是控制移动的方式也可以说是速度，在我的代码块中提到的是ease-out 表示的是以缓慢结束的方式移动，ease-in相反的就是以缓慢开始的方式移动。 另外animation的属性还有好多好多这里就不一一列举了。 ","date":"2018-03-30","objectID":"/wx-week3/:0:0","tags":["周报","微信小程序"],"title":"微信小程序 开发第三周","uri":"/wx-week3/"}]