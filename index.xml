<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Zoey&#39;s Blog 你笑起来真像好天气</title>
        <link>https://Jrycardiac.github.io/</link>
        <description>Zoey&#39;s Blog 你笑起来真像好天气</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cardiac.outlook.com (Zoey)</managingEditor>
            <webMaster>cardiac.outlook.com (Zoey)</webMaster><lastBuildDate>Fri, 07 Jun 2019 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://Jrycardiac.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>微信小程序开发总结</title>
    <link>https://Jrycardiac.github.io/sweetplus/</link>
    <pubDate>Fri, 07 Jun 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://Jrycardiac.github.io/sweetplus/</guid>
    <description><![CDATA[产品简介 SweetPlus是一款基于烘焙蛋糕类食品的菜谱查找的微信小程序。旨在让喜爱做烘焙的用户可以快速查找到想要的菜谱，同时我还增加了节日的分类目录，让烘焙也变成一种有仪式感的事情。因为做烘焙的过程是甜甜的，做出的成品是甜甜的，那么查找做法的过程必然是更加甜的，所以我将这款小程序命名为SweetPlus。甜一点，再甜一点，更甜一点！
目标用户 任何可能想要做烘焙或者其他菜的人
主要功能 查询任何想要的做的甜品或者菜肴，以及在对应节日中通过节日分类查询到相应的食物的做法。对自己喜爱的菜谱进行收藏以及对现有的菜品的做法进行改进并上传发布给开发者。
开发过程 这款微信小程序是用云开发实现的，使用云开发数据库调用聚合数据中的菜谱大全的api对数据进行调用，通过wxss的样式改变将菜谱展示出来。
增加收藏按钮，点击按钮，自动将当前事物的id存入collectlist收藏列表中，通过对数据库food集合的查询从而将已经收藏过的食物做法展现在页面上。
增加改良按钮，点击按钮，跳转到发表页面，发表文字和图片，成功存入云开发数据库中。
以下是部分调用数据库的代码截图
  
开发成果      开发心得
 一定要养成良好的代码备份的习惯，充分利用git,不然泪水是流也流不完的。做不论是微信小程序还是其他项目的开发，一定要确定好需求，所有界面的逻辑，界面UI设计等等基本设定好之后动手去写代码，不然写的过程真的挺迷茫的，效率又不高。开发过程中出现了挺多语法和逻辑错误，最好的解决办法就是啃官方文档，一遍一遍的仔细读微信小程序官方文档api调用的例子，问题总会迎刃而解的。 ]]></description>
</item><item>
    <title>SQL安装总结</title>
    <link>https://Jrycardiac.github.io/test1/</link>
    <pubDate>Tue, 16 Apr 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://Jrycardiac.github.io/test1/</guid>
    <description><![CDATA[SQL server 2017 安装过程问题总结   首先推荐一个非常好用的公众号——软件安装管家。   大部分我们常用的软件破解版都可以在这里找到。当然我安装SQL server 2017 安装包以及教程都是在这个公众号找到的。在此附上连接
  之后按照安装教程一步一步进行，有几个重要的步骤需要注意。    在你想要安装的盘中新建文件夹jre 1.8，可将软件更改安装位置，这个对于之前安装位置错误还是有很大的帮助的。   修改path环境变量时，发现我的电脑中弹出的并非一条属性值，而是多条，这样就不知道该如何修改了。
解决办法：可将教程中需要修改的直接添加，然后将刚添加的属性值直接移到开头，便可以解决问题啦。（JDK的安装应该在之前学JAVA的时候就已经安装好了，后来出现问题，在命令行窗口中 执行 “java”命令即可验证。）
  安装SQL server ,在进行这一步时不能安装教程来勾选全选，这样后面的步骤中会出现错误提示: R服务相关未完成之类的。
解决办法： 带有‘R’的选项全部不选。
  接下来按照教程一步步进行就没问题啦。但是SQL server 安装成功之后，并不是我们课上使用的工具。我们需要的是SQL的manage 工具。所以打开一开始的安装中心界面点击第二条安装即可。  其实有了上面的安装包和安装教程就已经成功了90%，只需要注意我上面提到的几点再结合教程认真一步一步来，安装还是很容易的. ]]></description>
</item><item>
    <title>微信小程序 开发第四周</title>
    <link>https://Jrycardiac.github.io/wx-week4/</link>
    <pubDate>Sun, 07 Apr 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://Jrycardiac.github.io/wx-week4/</guid>
    <description><![CDATA[微信小程序-开发第四周 用mockdata 伪造小程序后台数据 对于一个小程序小白来说，还要搭后台才能利用数据看出测试效果简直是太麻烦了，而且调用理想网站的API还经常会报错误，所以这时候建立一个伪后台就显得尤为舒服。
 在小程序文件夹页面添加文件夹 data(名字当然是随便取啦）  在文件夹里新建js文件添加你想要测试的数据， 例如我想要做一个轮播图：  1 2 3 4 5 6 7 8 9 10 11  var localdata = { &#34;bannerPic&#34;:[{ pid:6, imgUrls: &#39;/image/b3.jpg&#39; },{ pid: 7, imgUrls: &#39;/image/b2.jpg&#39;, },{ pid: 8, imgUrls: &#39;/image/b1.jpg&#39;, }],   这是我们的数据文件，pid是对应的标号，方便后面调用。
然后在需要使用数据的对应页面文件夹下的js文件开头添加  1  var mockData= require(&#39;../../data/homedata.js&#39;);   就可以用我们刚刚添加的数据啦
当然wxml文件也需要写出调用：  1 2 3 4 5 6 7 8 9  &lt;swiper indicator-dots=&#34;true&#34; autoplay=&#34;true&#34; interval=&#34;{{interval}}&#34; duration=&#34;{{duration}}&#34; circular=&#34;true&#34;&gt; &lt;block wx:for=&#34;{{productlists.]]></description>
</item><item>
    <title>微信小程序第二周周报</title>
    <link>https://Jrycardiac.github.io/wx-week2/</link>
    <pubDate>Mon, 25 Mar 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://Jrycardiac.github.io/wx-week2/</guid>
    <description><![CDATA[微信小程序—尝试开发第二周 上周实现了一些基本的图片处理,这周继续页面进行改进。同时，和老师讨论之后，决定新增加社交功能以及自己搭配配方等功能。  微信小程序轮播图的实现 如果对之前js的轮播图掌握较好的话，那么对照小程序官方文档应该是容易掌握的。下面直接贴代码了。 index. js:  1 2 3 4 5 6  data: { indicatorDots: false, autoplay: false, //是否自动切换 interval: 3000, //自动切换时间间隔 duration: 800, //滑动动画时常 },   index. wxml
1 2 3 4 5 6 7 8 9  &lt;swiper indicator-dots=&#34;true&#34; autoplay=&#34;true&#34; interval=&#34;{{interval}}&#34; duration=&#34;{{duration}}&#34; circular=&#34;true&#34;&gt; &lt;block wx:for=&#34;{{productlists.bannerPic}}&#34; wx:key=&#34;{{index}}&#34;&gt; &lt;navigator url=&#34;details/details?pid={{item.pid}}&#34;&gt; &lt;swiper-item &gt; &lt;image src=&#34;{{item.imgUrls}}&#34; class=&#34;slide-image&#34; width=&#34;100%&#34; /&gt; &lt;/swiper-item&gt; &lt;/navigator&gt; &lt;/block&gt; &lt;/swiper&gt;   然后在.wxss文件里设置需要的高度和宽度即可。
  json文件中 一些小细节 开发过程中&quot;navigationBarTextStyle&rdquo;: 后面填写颜色的十六进制码会报错 ，提示应该为“black”或“white”。 查阅文档发现，仅支持白和黑，我又一次弱智了?]]></description>
</item><item>
    <title>微信小程序第一周周报</title>
    <link>https://Jrycardiac.github.io/wx-week1/</link>
    <pubDate>Sun, 17 Mar 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://Jrycardiac.github.io/wx-week1/</guid>
    <description><![CDATA[微信小程序-尝试开发第一周 刚开始开发小程序流的泪和犯的蠢  使用tabBar建立底部导航栏时图标上传失败 导入图标的时候，一直出现&hellip;jpg文件不存在，上传失败等这样的错误(忘了截图求放过），后来仔细检查，以及阅读小程序文档发现图标大小超过40KB,无法上传，于是修改了图标大小，完美解决。小程序文档还是要仔细读一读的！  逗号 以及是否支持注释 在写.json的配置文件以及.js文件中data的配置时，要注意最后一个括号中的语句是不加逗号的。（虽然很低级的错误，但我经常犯，也真的很无奈了)还有一点就是json文件是不支持加注释的。  在页面中添加背景图片  ***前来更新 ，屡次尝试之后发现官方给的云开发的例子中的添加图片方式并不能在手机端显示（应该我尝试过程中出现了问题，但一直没有解决），所以去找文档，发现图片处理应该直接用&lt;image&gt;来写，而且url图片路径中不能出现中文，使用本地图片的src应该使用绝对路径。
一把辛酸泪，好好读文档才是最重要的
我其实在这个方面浪费了挺长时间的，一开始在wxss文件中添加image属性，无果，后来在wxml文件的模块中尝试直接添加style=&quot;background-image= &hellip;..&quot;,问题还是没有解决。。然后百度一下，发现答案不外乎下面这几种： 但这些方法要么麻烦（比如那个base64)要么没用（比如我之前试过的），所以我还是决定去瞧瞧官方给的例子，果不其然！ 好吧，完美解决。之前尝试失败的原因居然是 url。还有一个要注意的是，语句 background-size: cover 功能是背景图片自动缩小比例适配模块，妈妈再也不用担心我得手动调整图片比例了：）
  出现错误json文件找不到 错误显示未找到文件，但我清楚地看到文件在那里，里面内容也没报错啊。百度无果。最后惊醒自己刚刚好像改了整个文件所在文件夹的名字&hellip;改回名字，问题解决。这一天天的都是些什么错误呀。
  小程序text文本换行 \n   text文本居中 使用flex 关键性语句justify-content：center;  display: flex; align-items: center; justify-content：center;
  尝试的第一周的学习成果 模型图、第一个界面的完成以及小程序的基本架构 在这里插入图片描述下周学习计划 这周主要用来做小程序模型图和首页前端，对于真正的开发还没有开始吧。
下周会在界面写完学有余力的情况下学习云函数、云开发。]]></description>
</item><item>
    <title>初学git的踩坑之路</title>
    <link>https://Jrycardiac.github.io/git-solve/</link>
    <pubDate>Wed, 02 Jan 2019 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://Jrycardiac.github.io/git-solve/</guid>
    <description><![CDATA[初学git之路问题总结 当我下定不学会不罢休的决心学习git的时候出现了一个又一个的错误
下面是我亲手解决之后的总结
 我究竟遇到了那些错误?  对git常用语法不熟悉导致的低级错误  对于几乎不使用命令行的我来说简直是死亡一般的灾难 之后花了点时间大致读了一下git&ndash;help，才避免了这些低级错误   出现错误提示  1 2 3  error: src refspec master does not match any. error: failed to push some refs to   常见原因：
1.本地git仓库目录下为空
2.本地仓库add后未commit
3.git init错误
4.在GitHub上面添加了README.MD文件之后，需要重新进行更新
解决办法：
1.控制面板打开文件夹选项 打开隐藏文件和文件夹显示
2.到本地仓库目录下查看是否有.git文件夹——无 则git init
3.看.git文件夹下是否有之前提交的文件——若无 则重新 git commit (如果之前git add过的话 没有就要重新 add commit)
4.在git-push 之前添加 git-pull 操作之后，重新进行push操作
 git commit 时，出现错误  1  error: Error building trees   解决办法：]]></description>
</item><item>
    <title>微信小程序 开发第三周</title>
    <link>https://Jrycardiac.github.io/wx-week3/</link>
    <pubDate>Fri, 30 Mar 2018 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://Jrycardiac.github.io/wx-week3/</guid>
    <description><![CDATA[微信小程序开发第三周 上周结合老师提出的意见对页面进行了整改，经过这一周的努力还是没有想到原料管理和焙圈（没错，我只是给它取了个名字而已）该具体怎么搞，于是我把原有不变的功能的页面改进了一下，对于一个具体烘焙作品的细节页面做了一些调整。
 css中的animation属性 animation是CSS3中新增的属性，它可以制作出多种酷炫的动画效果，和flash也有一定的联系。 比如 我尝试做的是点击商品名称旁边的收藏按钮，小心心图标会向右上角的?缓慢移动。 代码如下： 当然animation也有其他的属性 动画名称  1 2 3 4 5 6 7 8 9  /*1.name：动画名称*/ /*-webkit-animation-name: kf_play;*/ /*-moz-animation-name: kf_play;*/ /*-o-animation-name: kf_play;*/ /*animation-name: kf_play;*/   动画的持续时间，即播放一次动画所需的时间
1 2 3 4 5 6 7  /*2.duration：动画持续时间*/ /*-webkit-animation-duration: 2s;*/ /*-moz-animation-duration: 2s;*/ /*-o-animation-duration: 2s;*/ /*animation-duration: 2s;*/   动画播放速率曲线，这个属性与transition的一样。
1 2 3 4 5 6 7 8 9 10  /*3.animation-timing-function：动画播放速率曲线*/ /*-webkit-animation-timing-function: linear;*/ /*-moz-animation-timing-function: linear;*/ /*-o-animation-timing-function: linear;*/ /*animation-timing-function: linear;*/ /*其他可选值：ease | linear | ease-in | ease-out | ease-in-out*/   这里解释一下ease ease-in等的表示含义 这些是控制移动的方式也可以说是速度，在我的代码块中提到的是ease-out 表示的是以缓慢结束的方式移动，ease-in相反的就是以缓慢开始的方式移动。 另外animation的属性还有好多好多这里就不一一列举了。]]></description>
</item></channel>
</rss>
